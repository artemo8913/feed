name: Docker to cherepusick

on:
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: [self-hosted, acsrv]
    name: build apk
    env:
      YA_DISK_TOKEN: ${{ secrets.YA_DISK_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: paths
        with:
          filters: |
            android:
              - 'android/**'
      - name: run dockerfile
        if: steps.paths.outputs.android == 'true'
        run: cd android && docker build --build-arg YA_DISK_TOKEN="${YA_DISK_TOKEN}" -t android-builder .

  build:
    runs-on: [self-hosted, acsrv]
    env:
      IMAGE_NAME_BASENAME: feed-admin
      DB_DIR: /var/feed_db
    steps:
    - uses: docker/setup-buildx-action@v2
      with:
        install: true
    - uses: actions/checkout@v3
# DB
    - name: setup db dir
      run: mkdir -p ${DB_DIR}
# ADMIN
    - name: build admin
      run: |
          docker buildx build \
             --output type=docker \
             -t $IMAGE_NAME_BASENAME:$GITHUB_SHA  \
             -f Dockerfile_old \
             --build-arg API_URL=https://feed.cherepusick.keenetic.name/api \
             --build-arg NEW_API_URL=https://feed.cherepusick.keenetic.name/api/v1 \
             .
    - name: stop admin
      run: docker rm -f $IMAGE_NAME_BASENAME
    - name: run admin
      run: |
        docker run -d \
          -p 4262:4262 -p 4301:4301 -p 8080:80 \
          --network=apps \
          -v ${DB_DIR}:/app/db \
          --restart=always \
          --name $IMAGE_NAME_BASENAME \
          $IMAGE_NAME_BASENAME:$GITHUB_SHA
# BACKUP
#     - name: build backup
#       run: cd backup && docker build . --tag $IMAGE_NAME_BASENAME-backup:$GITHUB_SHA
#     - name: stop backup
#       run: docker rm -f $IMAGE_NAME-backup
#     - name: run backup
#       run: docker run -d -v ${DB_DIR}:/db --restart=always --name $IMAGE_NAME_BASENAME-backup $IMAGE_NAME_BASENAME-backup:$GITHUB_SHA
# CLIENT
#     - name: copy ver
#       run: cp pwa-ver.txt pwa-client
#     - name: build client
#       run: cd pwa-client && docker build . --tag $IMAGE_NAME-client:$GITHUB_SHA
#     - name: stop client
#       run: docker rm -f $IMAGE_NAME-client
#     - name: run client
#       run: docker run -d -p 9000:80 --network=apps --restart=always --name $IMAGE_NAME-client $IMAGE_NAME-client:$GITHUB_SHA
# CLEANUP
    - name: cleanup docker containers
      run: docker container prune --filter "until=168h" -f
    - name: cleanup docker images
      run: docker image prune -a -f --filter "until=168h"
    - name: cleanup docker build cache
      run: docker builder prune -a -f --filter "until=168h"
